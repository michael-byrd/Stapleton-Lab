x = c(30.98, 30.95, 30.97)
y = c(31.18, 31.18, 31.13)
outer(x, y,"-")
mean(outer(x, y,"-"))
install.packages("~/Downloads/PReMiuM_3.2.1.tar.gz", repos = NULL, type = "source")
install.packages("PReMiuM")
.Library
install.packages("~/Downloads/PReMiuM_3.2.1.tar.gz", repos = NULL, type = "source")
#install.packages("vqtl")
#install.packages("qtl")
library("qtl")
library("vqtl")
#we also got rid of "(" in SNP ID rz44bd and rz574bc
setwd("/Users/mbyrd/StapletonLab/Thomas/Stapleton-Lab/vQTL Random and Family")
random <-read.cross(file = "data/tidied/Random2.csv")
random <- drop.nullmarkers(random)
#scan with variance
random <- calc.genoprob(random)
routv <- scanonevar(cross = random,
mean.formula = height.in. ~ mean.QTL.add + mean.QTL.dom,
var.formula = ~ var.QTL.add + var.QTL.dom)
library("dplyr")
effect.sizes = function (cross, phenotype.name, focal.groups = NULL, nuisance.groups = NULL,
genotype.names = c("AA", "AB", "BB"), xlim = NULL, ylim = NULL,
title = paste(phenotype.name, "by", paste(focal.groups,
collapse = ", ")), draw_ribbons = TRUE, se_line_size = 1,
point_size = 1)
{
indiv.mean.estim <- indiv.mean.lb <- indiv.mean.ub <- "fake_global_for_CRAN"
indiv.sd.estim <- indiv.sd.lb <- indiv.sd.ub <- "fake_global_for_CRAN"
group.mean.estim <- group.mean.ub <- group.mean.lb <- "fake_global_for_CRAN"
group.sd.estim <- group.sd.ub <- group.sd.lb <- "fake_global_for_CRAN"
modeling.df <- dplyr::data_frame(placeholder = rep(NA, qtl::nind(cross)))
modeling.df[[phenotype.name]] <- cross[["pheno"]][[phenotype.name]]
marker.names <- c(focal.groups[focal.groups %in% colnames(qtl::pull.geno(cross = cross))],
nuisance.groups[nuisance.groups %in% colnames(qtl::pull.geno(cross = cross))])
phen.names <- c(focal.groups[focal.groups %in% colnames(qtl::pull.pheno(cross = cross))],
nuisance.groups[nuisance.groups %in% colnames(qtl::pull.pheno(cross = cross))])
for (marker.name in marker.names) {
modeling.df[[marker.name]] <- factor(x = qtl::pull.geno(cross = cross)[,
marker.name], labels = genotype.names)
}
for (phen.name in phen.names) {
modeling.df[[phen.name]] <- factor(qtl::pull.pheno(cross = cross)[[phen.name]])
}
modeling.df[["placeholder"]] <- NULL
covar.form <- paste(focal.groups, collapse = "+")
if (!is.null(nuisance.groups)) {
covar.form <- paste(covar.form, "+", paste(nuisance.groups,
collapse = "+"))
}
mean.form <- paste(phenotype.name, "~", covar.form)
var.form <- paste("~", covar.form)
dglm.fit <- dglm::dglm(formula = stats::formula(mean.form),
dformula = stats::formula(var.form), data = modeling.df)
mean.pred <- stats::predict(dglm.fit, se.fit = TRUE)
mean.estim <- mean.pred$fit
mean.se <- mean.pred$se.fit
sd.pred <- stats::predict(dglm.fit$dispersion.fit, se.fit = TRUE)
sd.estim <- sd.pred$fit/sd.pred$residual.scale
sd.se <- sd.pred$se.fit
indiv.prediction.tbl <- dplyr::bind_cols(stats::na.omit(modeling.df),
dplyr::data_frame(indiv.mean.estim = mean.estim, indiv.mean.lb = mean.estim -
mean.se, indiv.mean.ub = mean.estim + mean.se, indiv.sd.estim = exp(sd.estim),
indiv.sd.lb = exp(sd.estim - sd.se), indiv.sd.ub = exp(sd.estim +
sd.se)))
group.prediction.tbl <- indiv.prediction.tbl %>% dplyr::group_by_(.dots = c(focal.groups)) %>%
dplyr::summarise(group.mean.estim = mean(indiv.mean.estim),
group.mean.lb = mean(indiv.mean.lb), group.mean.ub = mean(indiv.mean.ub),
group.sd.estim = mean(indiv.sd.estim), group.sd.lb = mean(indiv.sd.lb),
group.sd.ub = mean(indiv.sd.ub))
return(group.prediction.tbl)
}
y = 1:length(routv$result$loc.name)
#effect sizes can not be computed for these 3 SNPs
rsizedf = matrix(nrow = length(routv$result$loc.name), ncol = 12)
map(y, function(x){
tryCatch({
print(x)
tempm =  effect.sizes(cross = random,
phenotype.name = "height.in.",
genotype.names = c("AA","BB"),
focal.groups = routv$result$loc.name[x])
tempv = matrix(nrow = 1, ncol = 12)
tempv[1,1:6] = as.numeric(tempm[1,2:7])
tempv[1,7:12] = as.numeric(tempm[2,2:7])
rsizedf[x,] <<- tempv
}, error = function(e){message(e)
rsizedf[x,] <<- rep(0,12)
}
)
})
library("purrr")
map(y, function(x){
tryCatch({
print(x)
tempm =  effect.sizes(cross = random,
phenotype.name = "height.in.",
genotype.names = c("AA","BB"),
focal.groups = routv$result$loc.name[x])
tempv = matrix(nrow = 1, ncol = 12)
tempv[1,1:6] = as.numeric(tempm[1,2:7])
tempv[1,7:12] = as.numeric(tempm[2,2:7])
rsizedf[x,] <<- tempv
}, error = function(e){message(e)
rsizedf[x,] <<- rep(0,12)
}
)
})
map(y, function(x){
tryCatch({
print(x)
tempm =  effect.sizes(cross = random,
phenotype.name = "height.in.",
genotype.names = c("AA","BB"),
focal.groups = routv$result$loc.name[x])
tempv = matrix(nrow = 1, ncol = 12)
tempv[1,1:6] = as.numeric(tempm[1,2:7])
tempv[1,7:12] = as.numeric(tempm[2,2:7])
rsizedf[x,] <<- tempv
}, error = function(e){message(e)
rsizedf[x,] <<- rep(0,12)
}
)
})
View(random)
View(routv)
routv[["result"]][["loc.name"]]
#install.packages("vqtl")
#install.packages("qtl")
library("qtl")
library("vqtl")
library("purrr")
#we also got rid of "(" in SNP ID rz44bd and rz574bc
setwd("/Users/mbyrd/StapletonLab/Thomas/Stapleton-Lab/vQTL Random and Family")
random <-read.cross(file = "data/tidied/Random2.csv")
random <- drop.nullmarkers(random)
#scan with variance
random <- calc.genoprob(random)
routv <- scanonevar(cross = random,
mean.formula = height.in. ~ mean.QTL.add + mean.QTL.dom,
var.formula = ~ var.QTL.add + var.QTL.dom)
View(routv)
