x = c(30.98, 30.95, 30.97)
y = c(31.18, 31.18, 31.13)
outer(x, y,"-")
mean(outer(x, y,"-"))
install.packages("~/Downloads/PReMiuM_3.2.1.tar.gz", repos = NULL, type = "source")
install.packages("PReMiuM")
.Library
install.packages("~/Downloads/PReMiuM_3.2.1.tar.gz", repos = NULL, type = "source")
library(plyr)
# macOS Path
setwd("/Users/mbyrd/StapletonLab/Stapleton_Lab/Manching_July")
data <- read.csv(file = "Manching2012PlantHT.csv")
snpData <- read.csv(file = "IBM94markerset raw data.csv")
markerNames <- names(snpData)
markerNamesLower <- sapply(markerNames, tolower)
markerNamesRem <- markerNamesLower[-c(1:6)]
for (i in 1:length(markerNamesRem)){
print(markerNamesRem[i])
}
data$Treatment
count(data$Treatment)
count(data$Line)
data1 <- data
iRem <- c()
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
data$Treatment
count(data$Treatment)
count(data$Line)
# Transposting the Data
snpDataT <- as.data.frame(t(snpData))
write.csv(file = "snpDataT.csv", x = snpDataT)
write.csv(file = "snpDataT.csv", x = snpDataT)
unique(data$Treatment)
count(data$Treatment)
unique(dat$Treatment)[2] == unique(dat$Treatment)[3]
unique(data$Treatment)[2] == unique(data$Treatment)[3]
levels(data$Treatment)[3] = levels(data$Treatment)[2]
count(data$Treatment)
levels(dat$Treatment)[10] = levels(dat$Treatment)[9]
levels(data$Treatment)[10] = levels(data$Treatment)[9]
count(data$Treatment)
levels(data$Treatment)[4] = levels(data$Treatment)[8]
count(data$Treatment)
levels(dat$Treatment) = c("control","ln","lw,ln","lw,p",
"ln,p","lw,ln,p","lw","p")
levels(data$Treatment) = c("control","ln","lw,ln","lw,p",
"ln,p","lw,ln,p","lw","p")
count(data$Treatment)
#Setting up quantitative columns using treatment levels
treats = matrix(rep(0,length(data$Treatment) * 3), ncol = 3)
treats = t(sapply(1:length(data$Treatment), function(x){
if(as.character(data$Treatment[x]) == "control"){
treats[x,] = c(0,0,0)
}else if(as.character(data$Treatment[x]) == "ln"){
treats[x,] = c(0,1,0)
}else if(as.character(data$Treatment[x]) == "lw,ln"){
treats[x,] = c(1,1,0)
}else if(as.character(data$Treatment[x]) == "lw,p"){
treats[x,] = c(1,0,1)
}else if(as.character(data$Treatment[x]) == "ln,p"){
treats[x,] = c(0,1,1)
}else if(as.character(data$Treatment[x]) == "lw,ln,p"){
treats[x,] = c(1,1,1)
}else if(as.character(data$Treatment[x]) == "lw"){
treats[x,] = c(1,0,0)
}else if(as.character(data$Treatment[x]) == "p"){
treats[x,] = c(0,0,1)}
}))
treats = as.data.frame(treats)
colnames(treats) = c("Low Water", "Low Nitrogen", "Pathogen")
#Now combining the new treatment columns into the old data frame
dat1 = cbind(treats$`Low Water`, treats$`Low Nitrogen`, treats$Pathogen, dat$Line, dat$Height_in)
#Now combining the new treatment columns into the old data frame
dat1 = cbind(treats$`Low Water`, treats$`Low Nitrogen`, treats$Pathogen, data$Line, data$Height_in)
#Now combining the new treatment columns into the old data frame
data2 = cbind(treats$`Low Water`, treats$`Low Nitrogen`, treats$Pathogen, data$Line, data$Height_in)
# Copy of the Data
data1 <- data
head(data2)
View(data2)
data2 = as.data.frame(data2)
levels(data$Treatment)[3] = levels(data$Treatment)[2]
levels(data$Treatment)[10] = levels(data$Treatment)[9]
levels(data$Treatment)[4] = levels(data$Treatment)[8]
levels(data$Treatment) = c("control","ln","lw,ln","lw,p",
"ln,p","lw,ln,p","lw","p")
#Setting up quantitative columns using treatment levels
treats = matrix(rep(0,length(data$Treatment) * 3), ncol = 3)
treats = t(sapply(1:length(data$Treatment), function(x){
if(as.character(data$Treatment[x]) == "control"){
treats[x,] = c(0,0,0)
}else if(as.character(data$Treatment[x]) == "ln"){
treats[x,] = c(0,1,0)
}else if(as.character(data$Treatment[x]) == "lw,ln"){
treats[x,] = c(1,1,0)
}else if(as.character(data$Treatment[x]) == "lw,p"){
treats[x,] = c(1,0,1)
}else if(as.character(data$Treatment[x]) == "ln,p"){
treats[x,] = c(0,1,1)
}else if(as.character(data$Treatment[x]) == "lw,ln,p"){
treats[x,] = c(1,1,1)
}else if(as.character(data$Treatment[x]) == "lw"){
treats[x,] = c(1,0,0)
}else if(as.character(data$Treatment[x]) == "p"){
treats[x,] = c(0,0,1)}
}))
library(plyr)
# macOS Path
setwd("/Users/mbyrd/StapletonLab/Stapleton_Lab/Manching_July")
# Observation Data
data <- read.csv(file = "Manching2012PlantHT.csv")
# Markerfile SNP Data
snpData <- read.csv(file = "IBM94markerset raw data.csv")
# List of Marker Names we have
markerNames <- names(snpData)
# Forcing all entries to have lower case
markerNamesLower <- sapply(markerNames, tolower)
# Removing non Marker Names (Heading)
markerNamesRem <- markerNamesLower[-c(1:6)]
count(data$Treatment)
# Transposting the Marker Data
snpDataT <- as.data.frame(t(snpData))
write.csv(file = "snpDataT.csv", x = snpDataT)
levels(data$Treatment)[3] = levels(data$Treatment)[2]
levels(data$Treatment)[10] = levels(data$Treatment)[9]
levels(data$Treatment)[4] = levels(data$Treatment)[8]
levels(data$Treatment) = c("control","ln","lw,ln","lw,p",
"ln,p","lw,ln,p","lw","p")
#Setting up quantitative columns using treatment levels
treats = matrix(rep(0,length(data$Treatment) * 3), ncol = 3)
treats = t(sapply(1:length(data$Treatment), function(x){
if(as.character(data$Treatment[x]) == "control"){
treats[x,] = c(0,0,0)
}else if(as.character(data$Treatment[x]) == "ln"){
treats[x,] = c(0,1,0)
}else if(as.character(data$Treatment[x]) == "lw,ln"){
treats[x,] = c(1,1,0)
}else if(as.character(data$Treatment[x]) == "lw,p"){
treats[x,] = c(1,0,1)
}else if(as.character(data$Treatment[x]) == "ln,p"){
treats[x,] = c(0,1,1)
}else if(as.character(data$Treatment[x]) == "lw,ln,p"){
treats[x,] = c(1,1,1)
}else if(as.character(data$Treatment[x]) == "lw"){
treats[x,] = c(1,0,0)
}else if(as.character(data$Treatment[x]) == "p"){
treats[x,] = c(0,0,1)}
}))
treats = as.data.frame(treats)
colnames(treats) = c("Low Water", "Low Nitrogen", "Pathogen")
#Now combining the new treatment columns into the old data frame
data1 = cbind(treats$`Low Water`, treats$`Low Nitrogen`, treats$Pathogen, data$Line, data$Height_in)
head(data1)
data1 = as.data.frame(data1)
data1[,4] = sapply(data1[,4],function(x){
x = levels(dat$Line)[x]
})
data1[,4] = sapply(data1[,4],function(x){
x = levels(data$Line)[x]
})
head(dat1)
#give them column names
colnames(dat1) =c("Low Water", "Low Nitrogen", "Pathogen", "Line", "Height")
head(dat1)
library(plyr)
# macOS Path
setwd("/Users/mbyrd/StapletonLab/Stapleton_Lab/Manching_July")
# Observation Data
data <- read.csv(file = "Manching2012PlantHT.csv")
# Markerfile SNP Data
snpData <- read.csv(file = "IBM94markerset raw data.csv")
# List of Marker Names we have
markerNames <- names(snpData)
# Forcing all entries to have lower case
markerNamesLower <- sapply(markerNames, tolower)
# Removing non Marker Names (Heading)
markerNamesRem <- markerNamesLower[-c(1:6)]
count(data$Treatment)
# Copy of the Data
data1 <- data
# Removing the entires that have Marker names that we don't have data on
# Run until data1 has 6792 observations
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
# Removing the entires that have Marker names that we don't have data on
# Run until data1 has 6792 observations
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
# Removing the entires that have Marker names that we don't have data on
# Run until data1 has 6792 observations
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
# Removing the entires that have Marker names that we don't have data on
# Run until data1 has 6792 observations
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
# Removing the entires that have Marker names that we don't have data on
# Run until data1 has 6792 observations
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
# Removing the entires that have Marker names that we don't have data on
# Run until data1 has 6792 observations
for (i in 1:length(data1$Line)){
if(!(trimws(tolower(data1$Line[i])) %in% markerNamesRem)){
data1 <- data1[-c(i), ]
}
}
write.csv(data1,file = "Test1.csv", row.names = FALSE)
setwd("/Users/mbyrd/StapletonLab/Thomas/Stapleton-Lab/Manching BayesNet/JulyWork")
dat <- read.csv(file = "ManchingScrubbed.csv")
small_dat <- dat[sample(4:6675, 5),]
small_dat <- rbind(dat[1:3,],small_dat)
small_dat[1,]
write.csv(small_dat, "small_manching.csv")
